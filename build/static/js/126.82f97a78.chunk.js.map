{"version":3,"file":"static/js/126.82f97a78.chunk.js","mappings":"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","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/semver/classes/comparator.js","../node_modules/semver/classes/range.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/valid.js","../node_modules/semver/index.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/re.js","../node_modules/semver/node_modules/lru-cache/index.js","../node_modules/semver/node_modules/yallist/iterator.js","../node_modules/semver/node_modules/yallist/yallist.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/valid.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n"],"names":["errors_1","require","asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","exports","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","_a","readUInt16BE","TransportError","readUInt8","chunkData","getReducedResult","DeviceModelId","devices","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","semver","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","Object","values","ledgerUSBVendorId","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","replace","__assign","subscribers","log","type","message","obj","String","date","Date","e","console","error","dispatch","window","__ledgerLogsListen","cb","indexOf","pop","ledgerDevices","vendorId","isSupported","Promise","resolve","navigator","hid","getHID","requestLedgerDevices","requestDevice","filters","device","sent","Array","isArray","getLedgerDevices","getDevices","filter","TransportWebHID","_super","_this","call","floor","random","inputs","read","shift","success","inputCallback","onInputReport","buffer","from","_disconnectEmitted","_emitDisconnect","emit","exchange","__awaiter","this","exchangeAtomicImpl","toString","framing","hidFraming","sendReport","_b","result","includes","DisconnectedDeviceDuringOperation","productId","undefined","addEventListener","__extends","request","__read","apply","open","openConnected","transport","onDisconnect","removeEventListener","DisconnectedDevice","prototype","close","exchangeBusyPromise","setScrambleKey","list","listen","observer","unsubscribed","existingDevices","getFirstLedgerDevice","then","next","descriptor","complete","TransportOpenUserCancelled","unsubscribe","Transport","ANY","Symbol","Comparator","constructor","comp","options","parseOptions","loose","debug","parse","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","SemVer","test","er","cmp","intersects","includePrerelease","Range","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","module","range","raw","set","format","split","map","parseRange","trim","c","first","isNullSet","isAny","comps","join","memoKey","keys","cached","cache","get","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","rangeList","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","parseComparator","replaceGTE0","rangeMap","Map","comparators","size","has","delete","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","max","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","a","compareBuild","inc","release","identifier","isNaN","Error","clean","s","eq","neq","gt","gte","lt","lte","op","coerce","rtl","COERCERTL","exec","index","lastIndex","COERCE","versionA","versionB","compareLoose","diff","version1","version2","v1","v2","hasPre","prefix","defaultResult","key","parsed","rcompare","rsort","sort","satisfies","valid","v","internalRe","constants","identifiers","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","rcompareIdentifiers","Number","MAX_SAFE_COMPONENT_LENGTH","process","NODE_DEBUG","_len","arguments","args","_key","numeric","anum","bnum","opts","k","reduce","o","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","self","doUse","node","hit","isStale","del","now","unshiftNode","maxAge","walker","tail","prev","removeNode","Entry","forEachStep","fn","thisp","Infinity","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","forEach","itemCount","rforEach","toArray","dump","h","dumpLru","len","item","unshift","peek","load","arr","l","expiresAt","prune","iterator","insert","inserted","Node","create","pushNode","res","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","reverse","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","ranges","simplified","original","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub"],"sourceRoot":""}